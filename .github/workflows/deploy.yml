name: Build and deploy .NET application to Container App silo

on:
  push:
    branches:
      - deploy

env:
  RESOURCE_GROUP_NAME: defendermarkiitest
  REGION: westeurope
  SVC_DOCKER: src/BankTransferStringValidationSvc/Dockerfile
  SVC_IMAGE: banktransferstringvalidationsvc

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout to the branch
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AzureSPN }}

    - name: Create resource group
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az group create -l ${{ env.REGION }} -n ${{ env.RESOURCE_GROUP_NAME }}

    - name: Creating resources
      uses: azure/arm-deploy@v1
      with:
        resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
        template: ./Azure/main_staging.bicep

  build:
    runs-on: ubuntu-latest
    needs: provision

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io
          username: ${{ secrets.SP_CLIENT_ID }}
          password: ${{ secrets.SP_CLIENT_SECRET }}

      - name: Build the api image and push it to ACR
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/${{ env.SVC_IMAGE }}:${{ github.sha }}, ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/${{ env.SVC_IMAGE }}:latest
          file: ${{ env.SVC_DOCKER }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AzureSPN }}

      - name: Deploy Container Apps
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n ${{ env.SVC_IMAGE }} -g ${{ env.RESOURCE_GROUP_NAME }} --server ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io --username ${{ secrets.SP_CLIENT_ID }} --password ${{ secrets.SP_CLIENT_SECRET }}
            az containerapp update -n ${{ env.SVC_IMAGE }} -g ${{ env.RESOURCE_GROUP_NAME }} -i ${{ env.RESOURCE_GROUP_NAME }}acr.azurecr.io/${{ env.SVC_IMAGE }}:latest

      - name: logout
        run: >
          az logout
